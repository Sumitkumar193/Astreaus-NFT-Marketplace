
import React,{ Component } from 'react'
  
class App extends Component{
  constructor(props){
    super(props)
    this.state = { title:'', price:'undefined', description:''}
    this.handleChange = this.handleChange.bind(this)
    this.handleSubmit = this.handleSubmit.bind(this)
  }
  
  // Form submitting logic, prevent default page refresh 
  handleSubmit(event){
    const { title, price, description} = this.state
    event.preventDefault()
    alert(`
      ____Your Details____\n
      Title : ${title}
      Description : ${description}
      Price : ${price}
    `)
  }
  
  // Method causes to store all the values of the 
  // input field in react state single method handle 
  // input changes of all the input field using ES6 
  // javascript feature computed property names
  handleChange(event){
    this.setState({
      // Computed property names
      // keys of the objects are computed dynamically
      [event.target.name] : event.target.value
    })
  }
  
  // Return a controlled form i.e. values of the 
  // input field not stored in DOM values are exist 
  // in react component itself as state
  render(){
    return(
      <form onSubmit={this.handleSubmit}>
        <div>
          <label htmlFor='title'>Title of NFT</label>
          <input 
            name='title'
            placeholder='Title' 
            value = {this.state.title}
            onChange={this.handleChange}
          />
        </div>
        <div>
          <label htmlFor='desc'>Description</label>
          <textarea
            name='description' 
            placeholder='Description'
            value={this.state.description}
            onChange={this.handleChange}
          />
        </div>
        <div>
          <label htmlFor='price'>Price</label>
          <input
            name='price' 
            type='number'
            placeholder='Price'
            value={this.state.price}
            onChange={this.handleChange}
          />
        </div>
        <div>
          <button>Mint NFT</button>
        </div>
      </form>
    )
  }
}
  
export default App